=====НОВОСТИ ПРО ТИА====
TEA 49.0.0, ноябрь 2019
---------------------------------------
  
   ОБ ИЗМЕНЕНИЯХ НЕЗРИМЫХ

   ТИА основан на библиотеке функций Qt и совместим с ее версиями 4 и 5. Изменения в грядущей, шестой версии, требуют большой переделки исходного кода, и по сути бОльшая часть этой переделки сделана в этой версии ТИА.
   А раз так, вы можете столкнуться с глюками, ибо кода переписано много, причем в местах самых важных - подсветка синтаксиса, движок списка открытых документов. До выкладывания версии 49 я, конечно, постоянно работал в ней сам, и был один вылет при прокрутке текста вверх, что по идее не должно было случиться, ибо в этом я ничего не менял. Вообще все правки проверены мною минимум один раз.
  Перелопачивание кода привело к пересмотру всего исходника ТИА вообще и я заметил некоторые ошибки, накопившиеся с годами и возникшие скорее по недосмотру. Их я исправил. Также пришлось менять часть кода, связанного с выбором шрифтов, т.к. в Qt 5.13 в Arch/Manjaro в движке шрифтов кроется странная ошибка, которая уже проявилась в ряде программ. Пришлось делать в коде ТИА обходные маневры, чтобы всё работало на прежнем уровне.
   Со времени создания ТИА на основе Qt, я еще не вносил в код редактора так много изменений, которые не важны, однако не влияют на внешнюю работу программы.

   ИЗМЕНЕНИЯ ЗРИМЫЯ

  + В меню ФП появилось подменю Контрольные суммы с выбором алгоритмов вычисления: MD4, MD5, SHA1, SHA 224, все SHA-2, 3, Keccak.
  + Функции - Текст - Анаграмма. Может быть очень прожорлива в потреблении процессора и памяти.
  * Нав - Следующая вкладка/Предыдущая вкладка - теперь работает по кругу. Возрадуемся же!
  * Когда открываем файл из списка последних файлов, редактор становится активным даже если не был.
  * Встроенное автоматическое определение UTF-8 улучшено.
  + Наладка - Общее - Использовать Enca для определения кодировки. Появилась такая опция. Вообще говоря всё это только для кнопочки определения кодировки, которая на панели открытия файлов. И да, Enca (если установлена, а обычно она установлена) определяет кодировки лучше, чем встроенные в ТИА алгоритмы.
  * Поддержка QML-плагинов переходит в состояние, которое я бы назвал - никакая. То есть, вы можете собрать ТИА с поддержкой QML-плагинов и они будут работать как раньше. Беда в том, что мне неизвестно, чтобы кто-либо кроме меня писал эти плагины или пользовался ими. Выпилить код поддержки плагинов совсем мне пока жалко, да и вдруг кому-то они таки нужны. Но теперь по умолчанию при сборке с cmake плагины отключены, но могут быть включены. Сборка с meson - выключены. Сборка с qmake - включены. При возникновении Qt6, поддержка плагинов остается как есть, на уровне Qt5, если не будет убрана вообще. 
 
  ЗАМЕТКИ ДЛЯ ВЕДУЩИХ ПАКЕТОВ

0. Спасибо за труд!

1. Хотя у ТИА два сайта, лучше брать исходники релизов с гитхаба:
https://github.com/psemiletov/tea-qt/archive/$pkgver.tar.gz
   
  Обратите внимание, что каталог исходника ТИА после распаковки будет be tea-qt-${pkgver}

2. После сборки ТИА представляет собой один бинарник, куда зафугованы ресурсы (документация и т.д.). Нет нужды помещать документацию куда-то еще.

3. TEA поддерживает три системы сборки:

  * qmake - традиционная, не совсем удобная, хороша для сборок под Qt4-Win32-OS/2-Slackware builds. Исходник qmake-проекта ТИА уродлив и замысловат. QML-плагины по умолчанию включены. Я не советую использовать qmake для сборки, потому что с введением Qt6 всё равно придется переходить на cmake или meson. Итак, qmake-сборку оставим для Qt4 и OS/2. Сборка под Qt 5 тоже работает впрочем как часы.

  * cmake - предпочительная система сборки для ТИА под Qt5. Именно ее я буду использовать и когда выйдет Qt6. QML плагины могут быть включены (см. README), по умолчанию выключены.

  * meson - для рабочих сборок исходника я использую именно meson/ninja, но файл проекта под meson менее развит и отточен, чем cmake-проект.

   С кирпичным пролетарским приветом, Петр Семилетов!